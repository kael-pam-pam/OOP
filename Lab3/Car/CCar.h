#pragma once
#include <string>
#include <iostream>

enum class Direction
{
	FORWARD,
	BACKWARD,
	HOLD
};

class CCar
{
/*
		Передача	Диапазон скоростей
		Задний ход	0 – 20
		Нейтраль	Без ограничений
		Первая	0 – 30
		Вторая	20 – 50
		Третья	30 – 60
		Четвертая	40 – 90
		Пятая	50 – 150

На каждой передаче можно развить скорость в пределах отведенного данной передаче диапазона. Исключение – нейтральная передача, на которой скорость можно изменить только уменьшить (по модулю).
При включенном двигателе переключиться можно с любой передачи на любую при условии, что текущая скорость автомобиля находится в диапазоне скоростей новой передачи, и направление движения автомобиля допускает включение данной передачи. Например:
⦁	на задний ход можно переключиться только на нулевой скорости; даже при движении назад на нейтральной передаче не допускается включать заднюю передачу.
⦁	с заднего хода можно переключиться на первую передачу только на нулевой скорости;
⦁	переключившись на заднем ходу на нейтральную передачу на ненулевой скорости, переключиться на переднюю передачу можно только после остановки
Двигатель данного автомобиля может быть выключен только при нулевой скорости на нейтральной передаче. При выключенном двигателе переключиться можно только на нейтральную передачу. Как следствие, автомобиль после включения двигателя находится на нейтральной передаче в состоянии покоя.

*/

	public:
		bool IsTurnedOn() const;			//Состояние двигателя (включен или выключен) 
		Direction GetDirection() const;		//Направление движения (вперед, назад или стоим на месте)
		int GetSpeed() const;				//Текущая скорость движения (целое число от 0 до максимальной скорости)
		int GetGear() const;				//Текущая выбранная передача [-1..5]

		bool TurnOnEngine();		//Включить двигатель (если он выключен). Возвращает true, если двигатель включился (или уже был включен).
		bool TurnOffEngine();		//Выключить двигатель (если он включен и текущая передача – нейтральная, а автомобиль стоит). Возвращает true, если двигатель был успешно выключен (или уже был выключен), и false, если двигатель не может быть в данный момент выключен.
		bool SetGear(int gear);		//Выбрать указанную передачу [-1..5]. В случае успешного переключения передачи (в том числе и на саму себя) возвращает true.
		bool SetSpeed(int speed);	//Задать указанную скорость. Возвращает true, если скорость удалось изменить и false, если изменить скорость движения на указанную невозможно (например, на нейтральной передаче нельзя разогнаться).

	private:
		bool m_isOnEngine = false;
		Direction m_direction = Direction::HOLD;
		int m_speed = 0;
		int m_gear = 0;
};

class CDashboard
{
	public:
		CDashboard(CCar& car, std::istream& input, std::ostream& output);
		bool HandleCommand();
	private:
		bool Info();				//Выводит состояние двигателя автомобиля, направление движения, скорость и передачу
		bool EngineOn();			//Включает двигатель
		bool EngineOff();			//Выключает двигатель
//!?		bool SetGear передача	//Включает заданную передачу, заданную числом от -1 до 5. В случае ошибки сообщает о причине невозможности переключения передачи
//!?		bool SetSpeed скорость	//Устанавливает указанную скорость движения, заданную неотрицательным числом. В случае невозможности изменения скорости сообщает о причине невозможности изменить скорость на указанную.

		CCar& m_car;
		std::istream& m_input;
		std::ostream& m_output;
};